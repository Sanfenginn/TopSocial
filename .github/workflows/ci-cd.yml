name: ci/cd Pipeline
# CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    # CI只在Pull Request事件时运行，但不包括Pull Request被关闭的情况.
    if: >
      github.event_name == 'pull_request' &&
      github.event.action != 'closed'
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check SSH version
        run: ssh -V

      - name: Install dependencies
        run: npm install

      - name: Install json-server
        run: npm install -g json-server

      - name: Start JSON Server
        run: json-server --watch db.json --port 51002 --no-cors

      - name: Run tests
        run: npm test

      - name: Output npm log
        if: failure() # 只有在前面的步骤失败时才运行
        run: cat /home/runner/.npm/_logs/*.log

      - name: Check HTML
        run: npx htmlhint "**/*.html" --ignore "coverage/**/*"

      - name: Check CSS
        run: |
          if compgen -G "**/*.css" > /dev/null; then
            npx stylelint "**/*.css"
          else
            echo "No CSS files found, skipping stylelint."
          fi

      - name: Check JavaScript
        run: |
          if compgen -G "**/*.js" > /dev/null; then
            npx eslint "**/*.js" --no-cache --config .eslintrc.js
          else
            echo "No JavaScript files found, skipping eslint."
          fi

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # CD
  deploy:
    runs-on: ubuntu-latest
    # CD只在Push事件时运行，且只在main分支上运行.
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/TopSocial
            git fetch --all
            git reset --hard origin/main
            git clean -df
            sudo chmod -R 755 /home/ubuntu/TopSocial
            sudo systemctl reload apache2
